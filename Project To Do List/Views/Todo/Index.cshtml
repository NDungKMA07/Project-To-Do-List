@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<ul class="todo" id="todo">
    @for (var i = 0; i < ViewBag.resultOff.Count; i++)
    {
        var count = i + 1;
        <li> 
                <span>@count</span>
            <span>@ViewBag.resultOff[i].Text</span>
          
           <div class="buttons">
                    <a href="/Todo/Delete/@ViewBag.resultOff[i].ID" class="remove" onclick="return window.confirm('Are you sure?');">
                    <i class="fa fa-trash-alt"></i>
                </a>
                <a href="/Todo/OnState/@ViewBag.resultOff[i].ID"  class="complete">
                    <i class="far fa-check-circle"></i>
                </a>

            </div>
        </li>

    }
</ul>





<ul class="todo" id="completed">

    @for (var i = 0; i < ViewBag.StateOn.Count; i++)
    {

        var count = i + 1;

                <li> <span>@count</span>
            <span>@ViewBag.StateOn[i].Text</span>
           
            <div class="buttons">
                    <a href="/Todo/Delete/@ViewBag.StateOn[i].ID" class="remove" onclick="return window.confirm('Are you sure?');">
                    <i class="fa fa-trash-alt"></i>
                 </a>

                <a href="/Todo/OffState/@ViewBag.StateOn[i].ID" class="complete">
                    <i class="far fa-check-circle"></i>
                    <i class="fas fa-check-circle"></i>
                </a>

            </div>
        </li>
    }
</ul>
@{
    //@Html.PagedListPager((IPagedList)ViewBag.recordPage, page => Url.Action("Index", new { page = page }))
}
