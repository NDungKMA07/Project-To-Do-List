@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<ul class="todo" id="todo">
    @for (var i = 0; i < ViewBag.resultOff.Count; i++)
    {
        var count = i + 1;
        <li> 
                <span>@count</span>
            <span>@ViewBag.resultOff[i].Text</span>
          
           <div class="buttons">
                    <a href="/Todo/Delete/@ViewBag.resultOff[i].ID" class="remove" onclick="return window.confirm('Are you sure?');">
                    <i class="fa fa-trash-alt"></i>
                </a>
                <a href="/Todo/OnState/@ViewBag.resultOff[i].ID"  class="complete">
                    <i class="far fa-check-circle"></i>
                </a>

            </div>
        </li>

    }
</ul>

@Html.PagedListPager((IPagedList)ViewBag.resultOff,p=>Url.Action("Index", new {page = p}))




<ul class="todo" id="completed">

    @for (var i = 0; i < ViewBag.StateOn.Count; i++)
    {

        var count = i + 1;

                <li> <span>@count</span>
            <span>@ViewBag.StateOn[i].Text</span>
           
            <div class="buttons">
                    <a href="/Todo/Delete/@ViewBag.StateOn[i].ID" class="remove" onclick="return window.confirm('Are you sure?');">
                    <i class="fa fa-trash-alt"></i>
                 </a>

                <a href="/Todo/OffState/@ViewBag.StateOn[i].ID" class="complete">
                    <i class="far fa-check-circle"></i>
                    <i class="fas fa-check-circle"></i>
                </a>

            </div>
        </li>
    }
</ul>
<style>

.pagination {
    display: flex;
    list-style-type: none;
    margin: 10px 0;
}

    .pagination li {
        width: 25px;
        height: 25px;
        text-align: center;
        line-height: 25px;
        margin: 0 3px;
        
        border-radius: 3px;
        border: 1px solid rgba(222, 57, 99, 0.6);
        color: #fff;
        transition: all 0.3s linear;
        font-size: 15px;
    }
    .pagination li a{
        text-decoration:none;
    }

        .pagination li:hover {
            background-color: rgba(222, 57, 99, 0.6);
            
        }
        .pagination li:hover a{
            color: #fff;
            font-weight: bold;
            text-decoration:none;
        }

    .pagination .active {
        background-color: rgba(222, 57, 99, 0.6);
       
    }
    .pagination .active span{
         color: #fff;
        font-weight: bold;
  
    }


</style>

@Html.PagedListPager((IPagedList)ViewBag.StateOn,p=>Url.Action("Index", new {page = p}))